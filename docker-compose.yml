services:
  app:
    image: ghcr.io/1334robotics/vorel-app:latest
    restart: always
    links:
      - mariadb
    ports:
      - "${Port:-3002}:${Port:-3002}"
    environment:
      - NODE_ENV=production
      - PORT=${Port:-3002}
      - Nexus_Api_Key=${Nexus_Api_Key}
      - TBA_API_Key=${TBA_API_Key}
      - DB_HOST=mariadb
      - DB_PORT=3306
      - DB_NAME=vorel
      - DB_USER=${DB_USER:-vorel}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - mariadb
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:${Port:-3002}/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.scope=vorel-app"

  mariadb:
    image: mariadb:11
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=vorel
      - MYSQL_USER=${DB_USER:-vorel}
      - MYSQL_PASSWORD=${DB_PASSWORD}    
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 60 --cleanup --rolling-restart --scope vorel-app --label-enable
    restart: always
    environment:
      - WATCHTOWER_POLL_INTERVAL=60

volumes:
  mariadb_data:

networks:
  app-network:
    driver: bridge
