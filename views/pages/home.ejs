<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Vorel - FRC Match Schedule & Results Tracker</title>
  <%- include('../partials/styles') %>
  <style>
    :root {
      --primary: #4fc3f7;
      --primary-darker: #0288d1;
      --accent: #8B0000;
      --accent-hover: #A00000;
      --bg-dark: #111111;
      --bg-card: #1a1a1a;
      --bg-card-hover: #222222;
      --text: #f0f0f0;
      --text-secondary: #a0a0a0;
      --border: #333333;
    }
    
    html, body {
      height: 100%; /* Ensure the body fills the viewport */
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
    }
    
    body {
      background-color: var(--bg-dark);
      color: var(--text);
      font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      line-height: 1.6;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      position: relative;
      margin: 0;
      padding: 0;
      overflow-x: hidden;
    }
    
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 24px;
    }
    
    .hero {
      padding: 40px 0 50px;
      text-align: center;
      position: relative;
      overflow: hidden;
      flex: 1 0 auto; /* Allow it to grow but not shrink */
    }
    
    .hero::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: radial-gradient(circle at 50% 0%, rgba(139, 0, 0, 0.2), transparent 70%);
      z-index: -1;
      pointer-events: none;
    }
    
    .hero-logo {
      max-width: 250px;
      height: auto;
      margin-bottom: 20px;
    }
    
    .hero-title {
      font-size: 2.5rem;
      font-weight: 800;
      margin: 0 0 12px;
      background: linear-gradient(135deg, var(--primary), #ffffff);
      -webkit-background-clip: text;
      background-clip: text;
      -webkit-text-fill-color: transparent;
      line-height: 1.2;
    }
    
    .hero-subtitle {
      font-size: 1.2rem;
      font-weight: 400;
      color: var(--text-secondary);
      margin: 0 0 100px;
      max-width: 800px;
      margin-left: auto;
      margin-right: auto;
    }
    
    .features {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
      gap: 20px;
      margin: 0 0 30px;
    }
    
    .feature-card {
      background-color: rgba(26, 26, 26, 0.7);
      backdrop-filter: blur(4px);
      border-radius: 12px;
      padding: 20px;
      border: 1px solid var(--border);
      transition: all 0.3s ease;
    }
    
    .feature-card:hover {
      background-color: rgba(34, 34, 34, 0.8);
      transform: translateY(-4px);
      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    }
    
    .feature-icon {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      border-radius: 10px;
      margin-bottom: 12px;
      background: linear-gradient(135deg, var(--primary-darker), var(--primary));
      color: white;
    }
    
    .feature-title {
      font-size: 1.1rem;
      font-weight: 600;
      margin: 0 0 8px;
      color: white;
    }
    
    .feature-description {
      color: var(--text-secondary);
      margin: 0;
      font-size: 0.9rem;
    }
    
    .search-section {
      background-color: rgba(26, 26, 26, 0.7);
      backdrop-filter: blur(4px);
      border-radius: 16px;
      padding: 30px;
      margin: 0 0 20px;
      border: 1px solid var(--border);
    }
    
    .search-title {
      font-size: 1.6rem;
      font-weight: 700;
      margin: 0 0 25px;
      text-align: center;
      color: white;
    }
    
    .form-row {
      margin-bottom: 20px;
    }
    
    label {
      display: block;
      margin-bottom: 8px;
      font-weight: 500;
      font-size: 1rem;
    }
    
    .input-hint {
      display: block;
      font-size: 0.8rem;
      color: var(--text-secondary);
      margin-top: 6px;
    }
    
    input[type="text"] {
      width: 100%;
      padding: 14px 16px;
      background-color: rgba(255, 255, 255, 0.05);
      border: 1px solid var(--border);
      border-radius: 8px;
      color: white;
      font-size: 1rem;
      transition: all 0.2s ease;
      box-sizing: border-box;
    }
    
    input[type="text"]:focus {
      border-color: var(--primary);
      box-shadow: 0 0 0 2px rgba(79, 195, 247, 0.2);
      outline: none;
      background-color: rgba(255, 255, 255, 0.07);
    }
    
    input[type="text"]::placeholder {
      color: var(--text-secondary);
    }
    
    button {
      width: 100%;
      padding: 16px 20px;
      background: linear-gradient(135deg, var(--accent), var(--accent-hover));
      color: white;
      border: none;
      border-radius: 8px;
      font-size: 1.1rem;
      font-weight: 600;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all 0.3s ease;
    }
    
    button:hover {
      transform: translateY(-2px);
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.2);
    }
    
    button svg {
      margin-right: 8px;
    }
    
    .search-container {
      position: relative;
      width: 100%;
    }
    
    .search-results {
      position: absolute;
      width: 100%;
      max-height: 250px;
      overflow-y: auto;
      background-color: var(--bg-card);
      border: 1px solid var(--border);
      border-radius: 0 0 8px 8px;
      z-index: 100;
      display: none;
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.2);
    }
    
    .search-results.active {
      display: block;
    }
    
    .search-item {
      padding: 12px 16px;
      cursor: pointer;
      border-bottom: 1px solid var(--border);
    }
    
    .search-item:hover, .search-item.selected {
      background-color: rgba(255, 255, 255, 0.05);
    }
    
    .search-item .event-name {
      font-weight: 600;
      color: var(--primary);
      margin-bottom: 4px;
    }
    
    .search-item .event-details {
      font-size: 0.9rem;
      color: var(--text-secondary);
    }
    
    .search-item .event-key {
      font-size: 0.8rem;
      color: var(--text-secondary);
      opacity: 0.7;
    }
    
    .footer {
      background-color: var(--bg-card);
      padding: 20px 0; /* Reduce padding */
      text-align: center;
      border-top: 1px solid var(--border);
      margin-top: auto; /* Push to the bottom */
      flex-shrink: 0;
      position: relative;
      bottom: 0;
      width: 100%;
    }
    
    .footer-logo {
      max-width: 180px;
      height: auto;
      margin-bottom: 12px;
    }
    
    .footer-subtitle {
      color: var(--primary);
      font-size: 1rem;
      margin-bottom: 10px;
    }
    
    .footer-info {
      color: var(--text-secondary);
      font-size: 0.9rem;
      margin-top: 6px;
    }
    
    .footer-copyright {
      color: var(--text-secondary);
      font-size: 0.8rem;
      margin-top: 12px;
    }
    
    .footer-copyright a {
      color: var(--primary);
      text-decoration: none;
      transition: opacity 0.2s;
    }
    
    .footer-copyright a:hover {
      opacity: 0.8;
    }
    
    @media (max-width: 768px) {
      .hero {
        padding: 30px 0 40px;
      }
      
      .hero-title {
        font-size: 2rem;
      }
      
      .hero-subtitle {
        font-size: 1rem;
        margin-bottom: 20px;
      }
      
      .search-section {
        padding: 20px;
      }
    }
    
    .hero-logo, .footer-logo {
      display: block;
      margin-left: auto;
      margin-right: auto;
    }
    
    .main-content {
      flex: 1 0 auto; /* Ensure content fills available space */
      display: flex;
      flex-direction: column;
    }
    .footer .container {
       min-height: auto; /* Override the 100vh for footer container */
    }
  </style>
</head>
<body>
  <div class="main-content">
    <div class="hero">
      <div class="container">
        <img src="/banner.png" alt="Vorel App Banner" class="hero-logo" />
        <h1 class="hero-title">FRC Match Schedule & Results Tracker</h1>
        <p class="hero-subtitle">
          The ultimate companion for FRC teams tracking competition journeys with real-time updates
        </p>
        
        <div class="features">
          <div class="feature-card">
            <div class="feature-icon">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M13 2.05V5.08C16.39 5.57 19 8.47 19 12C19 15.87 15.87 19 12 19C8.47 19 5.57 16.39 5.08 13H2.05C2.55 17.94 6.81 22 12 22C17.51 22 22 17.51 22 12C22 6.81 17.94 2.55 13 2.05ZM12 7C9.24 7 7 9.24 7 12C7 14.76 9.24 17 12 17C14.76 17 17 14.76 17 12C17 9.24 14.76 7 12 7Z" fill="currentColor"/>
              </svg>
            </div>
            <h3 class="feature-title">Real-time Updates</h3>
            <p class="feature-description">Get live match updates directly from FIRST Nexus API as they happen.</p>
          </div>
          
          <div class="feature-card">
            <div class="feature-icon">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM9 17H7V10H9V17ZM13 17H11V7H13V17ZM17 17H15V13H17V17Z" fill="currentColor"/>
              </svg>
            </div>
            <h3 class="feature-title">Comprehensive Results</h3>
            <p class="feature-description">View detailed match results with alliance scoring breakdown.</p>
          </div>
          
          <div class="feature-card">
            <div class="feature-icon">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM9 17H7V14H9V17ZM13 17H11V10H13V17ZM17 17H15V7H17V17Z" fill="currentColor"/>
              </svg>
            </div>
            <h3 class="feature-title">Team Rankings</h3>
            <p class="feature-description">Track team rankings and performance stats throughout the event.</p>
          </div>
          
          <div class="feature-card">
            <div class="feature-icon">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M21 3H3C1.9 3 1 3.9 1 5V19C1 20.1 1.9 21 3 21H21C22.1 21 23 20.1 23 19V5C23 3.9 22.1 3 21 3ZM21 19H3V5H21V19Z" fill="currentColor"/>
                <path d="M9 8H7V16H9V8Z" fill="currentColor"/>
                <path d="M17 8H15V12H17V8Z" fill="currentColor"/>
                <path d="M13 8H11V18H13V8Z" fill="currentColor"/>
              </svg>
            </div>
            <h3 class="feature-title">Embeddable Displays</h3>
            <p class="feature-description">Easily embed match information on team websites and pit displays.</p>
          </div>
        </div>
        
        <div class="search-section">
          <h2 class="search-title">View Your Team's Matches</h2>
          
          <form method="get" action="/">
            <div class="form-row">
              <label for="teamKey">Team Number</label>
              <input type="text" name="teamKey" id="teamKey" placeholder="Enter team number (e.g., 1334 or frc1334)" />
              <span class="input-hint">Enter your team number with or without the "frc" prefix</span>
            </div>
            
            <div class="form-row">
              <label for="eventSearch">Event</label>
              <div class="search-container">
                <input type="text" name="eventSearch" id="eventSearch" placeholder="Search for an event (e.g., Ontario Provincial Championship)" autocomplete="off" />
                <input type="hidden" name="eventKey" id="eventKey" />
                <div class="search-results" id="searchResults"></div>
              </div>
              <span class="input-hint">Search for events by name, or event key (Note: Only 2025+ Events are valid)</span>
            </div>
            
            <button type="submit">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M15.5 14H14.71L14.43 13.73C15.41 12.59 16 11.11 16 9.5C16 5.91 13.09 3 9.5 3C5.91 3 3 5.91 3 9.5C3 13.09 5.91 16 9.5 16C11.11 16 12.59 15.41 13.73 14.43L14 14.71V15.5L19 20.49L20.49 19L15.5 14ZM9.5 14C7.01 14 5 11.99 5 9.5C5 7.01 7.01 5 9.5 5C11.99 5 14 7.01 14 9.5C14 11.99 11.99 14 9.5 14Z" fill="white"/>
              </svg>
              View Matches
            </button>
          </form>
        </div>
      </div>
    </div>
  </div>
  
  <footer class="footer">
    <div class="container">
      <img src="/banner2.png" alt="Vorel App Presented By 1334 Banner" class="footer-logo" />
      <div class="footer-subtitle">FRC Match Schedule & Results Tracker</div>
      <div class="footer-info">Data provided by FIRST Nexus API & The Blue Alliance APIs</div>
      <div class="footer-copyright">Vorel App © 2025 • <a href="https://github.com/1334Robotics/vorel-app">GitHub</a></div>
    </div>
  </footer>
  
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const searchInput = document.getElementById('eventSearch');
      const eventKeyInput = document.getElementById('eventKey');
      const searchResults = document.getElementById('searchResults');
      
      let selectedIndex = -1;
      let searchTimeout;
      let events = [];
      
      const form = document.querySelector('form');

      form.addEventListener('submit', (e) => {
        const teamKeyInput = document.getElementById('teamKey');
        const eventSearchInput = document.getElementById('eventSearch');
        const eventKeyInput = document.getElementById('eventKey');
        
        eventSearchInput.removeAttribute('name');
        
        if (!teamKeyInput.value.trim()) {
          e.preventDefault();
          
          let teamErrorMsg = document.querySelector('.team-error');
          if (!teamErrorMsg) {
            teamErrorMsg = document.createElement('div');
            teamErrorMsg.className = 'team-error';
            teamErrorMsg.style.color = '#ff5252';
            teamErrorMsg.style.fontSize = '0.9em';
            teamErrorMsg.style.marginTop = '5px';
            teamErrorMsg.textContent = 'Please enter a team number';
            teamKeyInput.parentNode.appendChild(teamErrorMsg);
          }
          
          teamKeyInput.style.borderColor = '#ff5252';
        }
        
        if (eventSearchInput.value.trim() && !eventKeyInput.value.trim()) {
          e.preventDefault();
          
          let errorMsg = document.querySelector('.event-error');
          if (!errorMsg) {
            errorMsg = document.createElement('div');
            errorMsg.className = 'event-error';
            errorMsg.style.color = '#ff5252';
            errorMsg.style.fontSize = '0.9em';
            errorMsg.style.marginTop = '5px';
            errorMsg.textContent = 'Please select an event from the search results';
            eventSearchInput.parentNode.appendChild(errorMsg);
          }
          
          eventSearchInput.style.borderColor = '#ff5252';
        }
      });

      document.getElementById('teamKey').addEventListener('input', (e) => {
        e.target.style.borderColor = '';
        const errorMsg = document.querySelector('.team-error');
        if (errorMsg) errorMsg.remove();
      });

      searchInput.addEventListener('input', (e) => {
        const query = e.target.value.trim();
        
        eventKeyInput.value = '';
        
        searchInput.style.borderColor = '';
        const errorMsg = document.querySelector('.event-error');
        if (errorMsg) errorMsg.remove();
        
        clearTimeout(searchTimeout);
        
        if (query.length < 3) {
          searchResults.innerHTML = '';
          searchResults.classList.remove('active');
          return;
        }
        
        searchTimeout = setTimeout(() => {
          fetchEvents(query);
        }, 300);
      });
      
      searchInput.addEventListener('keydown', (e) => {
        if (!searchResults.classList.contains('active')) return;
        
        const items = searchResults.querySelectorAll('.search-item');
        
        if (e.key === 'ArrowDown') {
          e.preventDefault();
          selectedIndex = Math.min(selectedIndex + 1, items.length - 1);
          updateSelection(items);
        }
        
        if (e.key === 'ArrowUp') {
          e.preventDefault();
          selectedIndex = Math.max(selectedIndex - 1, -1);
          updateSelection(items);
        }
        
        if (e.key === 'Enter' && selectedIndex > -1 && selectedIndex < items.length) {
          e.preventDefault();
          items[selectedIndex].click();
        }
        
        if (e.key === 'Escape') {
          closeSearchResults();
        }
      });
      
      document.addEventListener('click', (e) => {
        if (!searchInput.contains(e.target) && !searchResults.contains(e.target)) {
          closeSearchResults();
        }
      });
      
      function updateSelection(items) {
        items.forEach((item, index) => {
          if (index === selectedIndex) {
            item.classList.add('selected');
            item.scrollIntoView({ block: 'nearest' });
          } else {
            item.classList.remove('selected');
          }
        });
      }
      
      function closeSearchResults() {
        searchResults.classList.remove('active');
        selectedIndex = -1;
      }
      
      function fetchEvents(query) {
        fetch(`/api/events/search?q=${encodeURIComponent(query)}`)
          .then(response => {
            if (!response.ok) {
              throw new Error(`API responded with status: ${response.status}`);
            }
            return response.json();
          })
          .then(data => {
            events = data;
            displayResults(events);
          })
          .catch(error => {
            console.error('Error searching events:', error);
            searchResults.innerHTML = '';
            
            const errorElement = document.createElement('div');
            errorElement.className = 'search-item';
            errorElement.style.color = '#ff5252';
            errorElement.textContent = 'Unable to fetch events. Please check your connection and try again.';
            searchResults.appendChild(errorElement);
            
            searchResults.classList.add('active');
          });
      }
      
      function displayResults(events) {
        searchResults.innerHTML = '';
        
        if (events.length === 0) {
          const noResults = document.createElement('div');
          noResults.className = 'search-item';
          noResults.textContent = 'No events found';
          searchResults.appendChild(noResults);
        } else {
          events.forEach(event => {
            const item = document.createElement('div');
            item.className = 'search-item';
            
            const nameDiv = document.createElement('div');
            nameDiv.className = 'event-name';
            nameDiv.textContent = event.name;
            
            const detailsDiv = document.createElement('div');
            detailsDiv.className = 'event-details';
            detailsDiv.textContent = `${event.location} • ${event.date}`;
            
            const keyDiv = document.createElement('div');
            keyDiv.className = 'event-key';
            keyDiv.textContent = `Event Key: ${event.key}`;
            
            item.appendChild(nameDiv);
            item.appendChild(detailsDiv);
            item.appendChild(keyDiv);
            
            item.addEventListener('click', () => {
              searchInput.value = event.name;
              eventKeyInput.value = event.key;
              closeSearchResults();
            });
            
            searchResults.appendChild(item);
          });
        }
        
        searchResults.classList.add('active');
        selectedIndex = -1;
      }
    });
  </script>
</body>
</html>